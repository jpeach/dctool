# host compiler and flags
HOSTCC		= gcc
HOSTCFLAGS	= -O2
HOSTLDFLAGS	=
# cygwin may need this
#HOSTCFLAGS	= -O2 -D_WIN32

# you may have to change the paths for BFDLIB and BFDINCLUDE to
# the ones in your system

# these must point to your sh-elf bfd, not the system one
BFDLIB		= -L/opt/dc/sh-elf/lib -lbfd -liberty -lintl
BFDINCLUDE	= -I/opt/dc/sh-elf/include

# cygwin
# these must point to your sh-elf bfd, not the system one
#BFDLIB		= -L/usr/local/lib -lbfd -liberty -lintl
#BFDINCLUDE	= -I/usr/local/include

# MinGW
# these must point to your sh-elf bfd, not the system one
#BFDLIB		= -L/usr/local/lib -lbfd -liberty -lws2_32 -lwsock32
#BFDINCLUDE	= -I/usr/local/include

# When using libelf instead of BFD, these must point to your
# libelf installation (leave empty or undefined if libelf is part of the system)
#ELFLIB		= -L/opt/misc.ppc/lib
#ELFINCLUDE	= -I/opt/misc.ppc/include

# sh-elf-stuff
# if you have the SH compiler in your path you can leave SHTOOLS empty,
# otherwise set it to the bin directory of your SH compiler installation
# (include trailing slash)
#SHTOOLS	= /opt/dcgcc-4.7.0/sh-elf/bin/
SHTOOLS		=
TARGETCC	= $(SHTOOLS)sh-elf-gcc
TARGETCFLAGS	= -O2 -ml -m4-single-only
TARGETOBJCOPY	= $(SHTOOLS)sh-elf-objcopy
TARGETLD	= $(SHTOOLS)sh-elf-ld
# set TARGETCCVER to 3 or 4, depending on your SH compiler version (gcc 3.x or gcc 4.x)
# this line tries to detect the version automatically
TARGETCCVER	= $(shell $(TARGETCC) --version | head -1 | sed  "s/.* \([[:digit:]][[:digit:]]*\)\.[[:digit:]][[:digit:]]*.*/\1/")

# you generally shouldn't change this unless you are making forked
# versions (or test versions)
VERFLAGS	= -DDCLOAD_VERSION=\"1.0.5\"
TARGETCFLAGS	+= $(VERFLAGS)
HOSTCFLAGS	+= $(VERFLAGS)

# the ip of your dreamcast - set to 0.0.0.0 if you want to use arp on pc
DREAMCAST_IP	= 0.0.0.0

# dir to install dc-tool in
TOOLINSTALLDIR	= /usr/local/dc/bin

# uncomment this for cygwin
#EXECUTABLEEXTENSION = .exe
